// Copyright (c) MLLM Team.
// Licensed under the MIT License.
#pragma once

// A Package is composed by 9 components:
// 1. A Header File (generated by compiler, binary format)
// 2. A Tuning File (generated by compiler, json foramt, optional)
// 3. An IR Source File (generated by compiler, pure text, contain dbg info)
// 4. IR Executable File (generated by compiler, json format)
// 5. A Model Config File (from user, json format file)
// 6. A Tokenizer File (from user, json format file)
// 7. Model Params File (from user, binary format)
// 8. Other custom files (from user, binary format)

#include <cstddef>
#include <cstdint>
#include <cstring>

#include "mllm/core/MappedFile.hpp"

#define MLLM_JIT_PACKAGE_FILE_V1_MAGIC_NUMBER 0x0212
#define MLLM_JIT_PACKAGE_FILE_V1_VERSION 1
#define MLLM_JIT_PACKAGE_FILE_V1_MAX_FILE_NAME_LENGTH 1024

struct __attribute__((packed)) PackageFileV1HeaderFile {
  int32_t magic_number;                                              // 4B
  int32_t version;                                                   // 4B
  char package_name[MLLM_JIT_PACKAGE_FILE_V1_MAX_FILE_NAME_LENGTH];  // 1024B
  size_t tunning_file_offset;                                        // 8B
  size_t ir_src_offset;                                              // 8B
  size_t ir_executable_file_offset;                                  // 8B
  size_t model_cfg_file_offset;                                      // 8B
  size_t tokenizer_file_offset;                                      // 8B
  size_t model_param_file_offset;                                    // 8B
  size_t other_custom_file_offset;                                   // 8B
};
static_assert(sizeof(PackageFileV1HeaderFile) == 1088, "PackageFileV1HeaderFile size mismatch");

namespace mllm::jit::binary {

class PackageFile {
  PackageFile() = default;
  ~PackageFile() = default;

 private:
  MappedFile::ptr_t file_;
};

}  // namespace mllm::jit::binary
